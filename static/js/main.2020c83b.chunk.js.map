{"version":3,"sources":["components/common/FooterComponent.jsx","components/common/HeaderComponent.jsx","components/common/Welcome.jsx","components/tictactoe/TicTacToe.jsx","components/counter/CounterButton.jsx","components/counter/Counter.jsx","App.js","index.js"],"names":["FooterComponent","className","Component","HeaderComponent","href","to","Welcome","TicTacToe","startGame","setState","gameStarted","playingCurrently","state","player1","nextPlayer","player2","resetGame","player1status","player2status","turnCount","switchSymOn","itsAgame","board","id","value","disableCell","availpos","handleChange","event","target","name","checkforGame","itemList","slice","arr","filter","item","includes","player1symbol","updateBoard","cell_id","map","cell","player2symbol","console","log","winner","switchSymbols","p1Sym","p2Sym","players","symbol","type","this","onChange","onClick","disabled","pos","style","width","CounterButton","props","incrementMethod","by","decrementMethod","defaultProps","Counter","increment","prevState","counter","decrement","reset","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2020c83b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class FooterComponent extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <span className=\"text-muted\">\n                    Rights reserved...\n                </span>\n            </footer>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class HeaderComponent extends Component {\n    \n    render() {\n        \n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"/welcome\" className=\"navbar-brand\">Chougalas</a></div>\n                    <ul className=\"navbar-nav\">\n                        <li><Link className=\"nav-link\" to=\"/counter\">Counter</Link></li>\n                        <li><Link className=\"nav-link\" to=\"/tictactoe\">Tic-Tac-Toe</Link></li>\n\n                    </ul>\n                   { /* <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\n                    </ul> */}\n                </nav>\n            </header>\n        );\n    }\n}\n\n//export default withRouter(HeaderComponent)","import React, { Component } from 'react'\n\nexport default class Welcome extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Welcome!</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class TicTacToe extends Component {\n    constructor(){\n        super()\n        this.state = {\n            players : \n            [\n                {id : 1, name : 'Player 1', symbol : 'X'},\n                {id : 2, name : 'Player 2', symbol : 'O'}\n            ],\n            player1 : 'Player 1',\n            player1symbol :  'X', \n            player1status : 'Playing..',\n            player2 : 'Player 2',\n            player2symbol:  'O',\n            player2status : 'Playing..',\n            playingCurrently : '',\n            nextPlayer : '',\n            turnCount : 1,\n            switchSymOn : true,\n            itsAgame : false,\n            board : \n            [\n                {id : 1, value : '1', disableCell: false},\n                {id : 2, value : '2', disableCell: false},\n                {id : 3, value : '3', disableCell: false},\n                {id : 4, value : '4', disableCell: false},\n                {id : 5, value : '5', disableCell: false},\n                {id : 6, value : '6', disableCell: false},\n                {id : 7, value : '7', disableCell: false},\n                {id : 8, value : '8', disableCell: false},\n                {id : 9, value : '9', disableCell: false}\n            ],\n\n            availpos : [1,2,3,4,5,6,7,8,9]\n            \n        }   \n    }\n    startGame = () => {\n        this.setState({gameStarted : true,\n            playingCurrently : this.state.player1,\n            nextPlayer : this.state.player2\n        })\n    }\n\n    resetGame=() => {\n        this.setState({\n            player1status : 'Playing..',\n            player2status : 'Playing..',\n            playingCurrently : this.state.player1,\n            nextPlayer : this.state.player2,\n            turnCount : 1,\n            switchSymOn : true,\n            itsAgame : false,\n            board : \n            [\n                {id : 1, value : '1', disableCell: false},\n                {id : 2, value : '2', disableCell: false},\n                {id : 3, value : '3', disableCell: false},\n                {id : 4, value : '4', disableCell: false},\n                {id : 5, value : '5', disableCell: false},\n                {id : 6, value : '6', disableCell: false},\n                {id : 7, value : '7', disableCell: false},\n                {id : 8, value : '8', disableCell: false},\n                {id : 9, value : '9', disableCell: false}\n            ],\n            availpos : [1,2,3,4,5,6,7,8,9]\n        })\n    }\n\n    handleChange = (event) =>{\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    checkforGame = () =>{\n        let itemList = this.state.board.slice()\n        let arr = itemList.filter((item) => ([1,2,3].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        arr = itemList.filter((item) => ([4,5,6].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        arr = itemList.filter((item) => ([7,8,9].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        arr = itemList.filter((item) => ([1,4,7].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        arr = itemList.filter((item) => ([2,5,8].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        arr = itemList.filter((item) => ([3,6,9].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        arr = itemList.filter((item) => ([1,5,9].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        \n\n        arr = itemList.filter((item) => ([7,5,3].includes(item.id)))\n        if (arr[0].value === arr[1].value && arr[0].value === arr[2].value){\n            if(arr[0].value === this.state.player1symbol){\n                return 'winner-player1'\n            } else {\n                return 'winner-player2'\n            }\n        }\n\n        return ''\n    }\n\n    \n\n    updateBoard = (event) =>{\n        let cell_id = event.target.name\n\n        this.setState({\n            board :  this.state.board.map(cell => { \n                if(cell.id == cell_id){\n                    if(this.state.turnCount%2){\n                        cell.value=this.state.player1symbol\n                    } else {\n                        cell.value=this.state.player2symbol\n                    }\n                    cell.disableCell = true\n                }\n                console.log(\"cell_id \" + cell_id + \" : \" +cell.value)\n                return cell\n            }),\n            availpos : this.state.availpos.filter((item) => item != cell_id),\n            turnCount : this.state.turnCount + 1,\n            switchSymOn : false\n        })\n\n        let winner = this.checkforGame()\n        if(winner === 'winner-player1'){\n            this.setState( {\n                player1status : 'Winner',\n                player2status : ''\n            })\n        } else if(winner === 'winner-player2') {\n            this.setState( {\n                player1status : '',\n                player2status : 'Winner'\n            })\n        }\n        \n        if(this.state.turnCount === 9 || winner){\n            this.setState({ \n                board :  this.state.board.map(cell => {cell.disableCell = true \n                    return cell\n                    }),\n                playingCurrently : '',\n                nextPlayer : '',\n                turnCount : 'Game Over!',\n                itsAgame : true\n            })\n        } else if(this.state.turnCount%2){\n            this.setState( { \n                playingCurrently : this.state.player2,\n                nextPlayer : this.state.player1\n            })\n        } else {\n            this.setState( { \n                playingCurrently : this.state.player1,\n                nextPlayer : this.state.player2\n            })\n        }\n \n    }\n\n    switchSymbols = () => {\n        let p1Sym = this.state.player1symbol\n        let p2Sym = this.state.player2symbol\n        this.setState({\n            player1symbol : p2Sym,\n            player2symbol : p1Sym\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\"> \n                <div className=\"table-responsive\">\n                    <table className='table table-striped table-bordered table-sm'>\n                        <thead className='thead-light'>\n                            <td>Player Name</td>\n                            <td>Player Symbol</td>\n                            <td>Status</td>\n                        </thead>\n                        <tbody> \n                            <tr>\n                                <td>Player 1 : <input type=\"text\" name=\"player1\" value={this.state.player1} onChange={this.handleChange}/></td>\n                                <td>{this.state.player1symbol}</td>\n                                <td>{this.state.player1status}</td>\n                            </tr>\n                            <tr>\n                                <td>Player 2 : <input type=\"text\" name=\"player2\" value={this.state.player2} onChange={this.handleChange}/></td>\n                                <td>{this.state.player2symbol}</td>\n                                <td>{this.state.player2status}</td>\n                            </tr>\n                            <tr>\n                                <td>{!this.state.gameStarted && <button className=\"btn btn-success\" onClick={this.startGame} name=\"gameStart\" >Start the Game!</button>}</td>\n                                <td><button className=\"btn btn-success\" disabled={!this.state.switchSymOn} onClick={this.switchSymbols} name=\"switchSymbols\">Switch Symbols</button></td> \n                                <td>{!this.state.itsAgame && <button className=\"btn btn-warning\" onClick={this.resetGame} name=\"resetGame\">RESET GAME!</button>}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                { this.state.gameStarted && <>\n                    <table className='table table-striped table-bordered table-sm'>\n                        <tbody>\n                                \n                            { !this.state.itsAgame && <>\n                                <tr><td>Current Turn :=> {this.state.turnCount}</td> \n                                    <td className=\"info\">Next Turn will be for: {this.state.nextPlayer} </td>\n                                </tr> \n                                <tr>\n                                    <td>Current Turn is for: {this.state.playingCurrently}</td>\n                                    <td>\n                                        {this.state.availpos.map(pos => <button className=\"btn btn-success\" name= {pos} onClick={this.updateBoard}style={{\"font-size\": \"16px\", \"padding\": \"10px 20px\", width: \"20px\"}}>{pos}</button>)}\n                                    </td>\n                                </tr>\n                            </>}\n\n                            { this.state.itsAgame && <tr> <td><button className=\"btn btn-info\" onClick={this.resetGame} name=\"playAgain\">Play Again..</button></td></tr>}\n                        </tbody>    \n                    </table>\n                    \n                    <table className='table table-striped table-bordered table-sm'>\n                        <thead className=\"table-info\">\n                            <th>TIC</th>\n                            <th>TAC</th>\n                            <th>TOE</th>\n                        </thead>\n                        {/*<tr>\n                            <td style={{color: \"red\", \"font-size\" : \"60px\", \"background-color\" : [this.state.gameColor]}}>{this.state.board[0].value} </td>\n                             <td style={{color: \"red\", \"font-size\" : \"60px\"}}>{this.state.board[1].value} </td>\n                            <td style={{color: \"red\", \"font-size\" : \"60px\"}}>{this.state.board[2].value} </td>\n                        </tr>\n                        <tr>\n                            <td style={{color: \"red\", \"font-size\" : \"60px\"}}>{this.state.board[3].value} </td>\n                            <td style={{color: \"red\", \"font-size\" : \"60px\"}}>{this.state.board[4].value} </td>\n                            <td style={{color: \"red\", \"font-size\" : \"60px\"}}>{this.state.board[5].value} </td>\n                        </tr>\n                        <tr>\n                            <td style={{color: \"red\", \"font-size\" : \"60px\"}}>{this.state.board[6].value} </td>\n                            <td style={{color: \"red\", \"font-size\" : \"80px\"}}>{this.state.board[7].value} </td>\n                            <td style={{color: \"red\", \"font-size\" : \"60px\"}}>{this.state.board[8].value} </td>\n                        </tr>*/}\n                        <tbody>\n                            <tr>\n                                <td><button disabled={this.state.board[0].disableCell} className=\"btn btn-success\" name={this.state.board[0].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[0].value}</button></td>\n                                <td><button disabled={this.state.board[1].disableCell} className=\"btn btn-success\" name={this.state.board[1].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[1].value}</button></td>\n                                <td><button disabled={this.state.board[2].disableCell} className=\"btn btn-success\" name={this.state.board[2].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[2].value}</button></td>\n                            </tr>\n                            <tr>\n                                <td><button disabled={this.state.board[3].disableCell} className=\"btn btn-success\" name={this.state.board[3].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[3].value}</button></td>\n                                <td><button disabled={this.state.board[4].disableCell} className=\"btn btn-success\" name={this.state.board[4].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[4].value}</button></td>\n                                <td><button disabled={this.state.board[5].disableCell} className=\"btn btn-success\" name={this.state.board[5].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[5].value}</button></td>\n                            </tr>\n                            <tr>\n                                <td><button disabled={this.state.board[6].disableCell} className=\"btn btn-success\" name={this.state.board[6].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[6].value}</button></td>\n                                <td><button disabled={this.state.board[7].disableCell} className=\"btn btn-success\" name={this.state.board[7].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[7].value}</button></td>\n                                <td><button disabled={this.state.board[8].disableCell} className=\"btn btn-success\" name={this.state.board[8].id}  onClick={this.updateBoard}style={{\"fontSize\": \"60px\", width: \"80px\"}}>{this.state.board[8].value}</button></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </>}    \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\nclass CounterButton extends Component{\n\n    render () {\n        return( \n        <div className=\"counter\">\n            <button className=\"incrementButton\" onClick={ () => this.props.incrementMethod(this.props.by)}>+{this.props.by}</button>\n            <button className=\"decrementButton\" onClick={ () => this.props.decrementMethod(this.props.by)}>-{this.props.by}</button>\n            {/* THIS IS COMMENT <span className=\"count\">{this.state.counter}</span> \n            */}\n        </div>\n    )\n    } \n\n    /* THIS BLOCK OF CODE was created but not needed as parent methods are being called at onClick\n        increment = () => {\n            this.props.incrementMethod(this.props.by)\n        }\n\n        decrement = () => {\n            this.props.decrementMethod(this.props.by)\n        }\n    */\n}\n\nCounterButton.defaultProps = {\n    by : 1\n}\n\nCounterButton.propTypes = {\n    by : PropTypes.number\n}\n\nexport default CounterButton","import React,{ Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\nimport CounterButton from './CounterButton'\n\nclass Counter extends Component{\n\n    //Define the initial state in a constructor\n    // state=> counter 0\n\n    constructor(){\n        super();\n\n        this.state={\n            counter : 0\n        }\n\n        // DONT NEED WITHJ Arrow function==> this.increment= this.increment.bind(this)\n    }\n\n    render (){\n        return( \n        <div>\n            <div> \n                <span className=\"counterval\" >{this.state.counter}</span>\n            </div>          \n            <div className=\"buttonBlock\"> \n                <CounterButton incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n                <CounterButton by={2} incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n                <CounterButton by={3} incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n                <CounterButton by={4} incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n                <CounterButton by={5} incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n                <CounterButton by={10} incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n                <CounterButton by={100} incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n                <CounterButton by={1000} incrementMethod={this.increment} decrementMethod={this.decrement}></CounterButton>\n            </div> \n            <div> \n                <button className=\"reset\" onClick={this.reset}>RESET</button>\n            </div>  \n\n        </div>\n    )\n    }\n    \n    increment = (by) => {\n        //console.log('inside increment func in Counter{by}')\n        //Called from increment method in CounterButton\n        this.setState( \n            (prevState) => { \n                return{counter : this.state.counter + by}\n            }\n\n        )\n    }\n\n    decrement = (by) => {\n        this.setState( \n            (prevState) => { \n                return{counter : this.state.counter - by}\n            }\n        )\n    }\n\n    reset= () => {\n        //console.log('inside reset func in Counter{by}')\n        this.setState({\n            counter : 0\n        })\n    }\n}\n\nexport default Counter","import { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\nimport { FooterComponent } from './components/common/FooterComponent'\nimport { HeaderComponent} from './components/common/HeaderComponent'\nimport Welcome from  './components/common/Welcome'\nimport TicTacToe from './components/tictactoe/TicTacToe'\nimport Counter from './components/counter/Counter'\n\nclass App extends Component {\n    render(){ \n      return (\n        <div className=\"App\">\n              <Router>\n                <HeaderComponent/>\n                <div> FUN TIMES</div>\n                <Route path=\"/\" exact component={Welcome}></Route>\n                <Route path=\"/tictactoe\" component={TicTacToe}></Route>\n                <Route path=\"/counter\" component={Counter}/>\n                <FooterComponent/>\n              </Router>  \n          </div> \n      )\n    }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}